// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/postgresql_client"
}

datasource db {
  provider     = "postgresql"
  url          = env("POSTGRES_URL")
  relationMode = "prisma" // Not using constraint foreign key
}

enum TypeLogin {
  ACCOUNT
  FACEBOOK
  GOOGLE
  GITHUB
}

model User {
  user_id            Int       @id @default(autoincrement())
  user_first_name    String?
  user_last_name     String?
  user_name          String
  user_password      String?
  user_email         String?   @unique
  user_date_of_birth String?
  user_phone_number  String?
  user_image_url     String?
  user_devices       Device[]
  user_type_login    TypeLogin @default(ACCOUNT)
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
}

model Device {
  device_id  Int      @id @default(autoincrement())
  device_ip  String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User?    @relation(fields: [user_id], references: [user_id])
  user_id    Int?
}

model Role {
  role_id          Int         @id @default(autoincrement())
  role_name        String
  role_description String?
  created_at       DateTime    @default(now())
  updated_at       DateTime    @updatedAt
  GroupRole        GroupRole[]
}

model Group {
  group_id          Int               @id @default(autoincrement())
  group_name        String
  group_description String?
  group_parent_id   Int
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
  GroupRole         GroupRole[]
  GroupPermission   GroupPermission[]
}

model GroupRole {
  group    Group @relation(fields: [group_id], references: [group_id])
  group_id Int
  role     Role  @relation(fields: [role_id], references: [role_id])
  role_id  Int

  @@id([group_id, role_id])
}

model Permission {
  permission_id          Int               @id @default(autoincrement())
  permission_name        String
  permission_description String
  permission_route       String
  created_at             DateTime          @default(now())
  updated_at             DateTime          @updatedAt
  GroupPermission        GroupPermission[]
}

model GroupPermission {
  group         Group      @relation(fields: [group_id], references: [group_id])
  group_id      Int
  permission    Permission @relation(fields: [permission_id], references: [permission_id])
  permission_id Int

  @@id([group_id, permission_id])
}
