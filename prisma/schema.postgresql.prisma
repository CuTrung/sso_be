// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/postgresql_client"
}

datasource db {
  provider     = "postgresql"
  url          = env("POSTGRES_URL")
  relationMode = "prisma" // Not using constraint foreign key
}

enum TypeLogin {
  ACCOUNT
  FACEBOOK
  GOOGLE
  GITHUB
}

model User {
  user_id            Int       @id @default(autoincrement())
  user_first_name    String?
  user_last_name     String?
  user_name          String
  user_password      String?
  user_email         String?   @unique
  user_date_of_birth String?
  user_phone_number  String?
  user_image_url     String?
  user_type_login    TypeLogin @default(ACCOUNT)
  Device             Device[]
  Role               Role?     @relation(fields: [role_id], references: [role_id])
  role_id            Int?
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
}

model Device {
  device_id  Int      @id @default(autoincrement())
  device_ip  String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       User?    @relation(fields: [user_id], references: [user_id])
  user_id    Int?
}

model Role {
  role_id                 Int        @id @default(autoincrement())
  role_name               String
  role_description        String?
  role_is_all_permissions Boolean    @default(false)
  created_at              DateTime   @default(now())
  updated_at              DateTime   @updatedAt
  User                    User[]
  GroupRole               GroupRole? @relation(fields: [group_role_id], references: [group_role_id])
  group_role_id           Int?
}

model Webpage {
  webpage_id          Int         @id @default(autoincrement())
  webpage_url         String
  webpage_name        String
  webpage_key         String
  webpage_description String?
  GroupRole           GroupRole[]
}

model GroupRole {
  group_role_id          Int               @id @default(autoincrement())
  group_role_name        String
  group_role_description String?
  group_role_parent_id   Int?
  created_at             DateTime          @default(now())
  updated_at             DateTime          @updatedAt
  Role                   Role[]
  GroupPermission        GroupPermission[]

  Webpage    Webpage? @relation(fields: [webpage_id], references: [webpage_id])
  webpage_id Int?
}

model Permission {
  permission_id          Int              @id @default(autoincrement())
  permission_name        String
  permission_description String?
  permission_key         String
  permission_router      String
  created_at             DateTime         @default(now())
  updated_at             DateTime         @updatedAt
  GroupPermission        GroupPermission? @relation(fields: [group_permission_id], references: [group_permission_id])
  group_permission_id    Int?
}

model GroupPermission {
  group_permission_id          Int          @id @default(autoincrement())
  group_permission_name        String
  group_permission_description String?
  group_permission_parent_id   Int?
  created_at                   DateTime     @default(now())
  updated_at                   DateTime     @updatedAt
  Permission                   Permission[]
  GroupRole                    GroupRole?   @relation(fields: [group_role_id], references: [group_role_id])
  group_role_id                Int?
}
